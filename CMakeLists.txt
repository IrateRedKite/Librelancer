cmake_minimum_required (VERSION 3.15)

project (librelancernatives)
set(CMAKE_C_STANDARD 99)
set(LIBOUTPUTDIR ${CMAKE_BINARY_DIR}/binaries)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${LIBOUTPUTDIR})

MESSAGE(STATUS "Build type: " ${CMAKE_BUILD_TYPE})
MESSAGE(STATUS "Library Type: " ${LIB_TYPE})
MESSAGE(STATUS "Compiler flags:" ${CMAKE_CXX_COMPILE_FLAGS})
MESSAGE(STATUS "Compiler cxx release (debug info )flags:" ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
MESSAGE(STATUS "Compiler cxx min size flags:" ${CMAKE_CXX_FLAGS_MINSIZEREL})
MESSAGE(STATUS "Compiler cxx debug flags": ${CMAKE_CXX_FLAGS_DEBUG})
MESSAGE(STATUS "Compiler cxx flags:" ${CMAKE_CXX_FLAGS})
# get the correct naming across MSVC and mingw
if (WIN32)
    set(CMAKE_SHARED_LIBRARY_PREFIX "")
    set(CMAKE_STATIC_LIBRARY_PREFIX "")
    set(CMAKE_SHARED_MODULE_PREFIX "")
    set(CMAKE_IMPORT_LIBRARY_PREFIX "")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${LIBOUTPUTDIR}")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${LIBOUTPUTDIR}")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${LIBOUTPUTDIR}")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL "${LIBOUTPUTDIR}")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO "${LIBOUTPUTDIR}")
    set(CMAKE_PDB_OUTPUT_DIRECTORY_MINSIZEREL "${LIBOUTPUTDIR}")
	set(CMAKE_PDB_OUTPUT_DIRECTORY_RELWITHDEBINFO "${LIBOUTPUTDIR}")
	set(CMAKE_RELWITHDEBINFO_POSTFIX "")
	set(CMAKE_MINSIZEREL_POSTFIX "")
endif()
if(NOT MSVC_IDE)
  set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -s")
  set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -s")
endif()
set(BOOST_REGEX_STANDALONE ON CACHE BOOL "boost regex standalone" FORCE)
set(BT_BUILD_DEMO OFF CACHE BOOL "blurgtext demo" FORCE)
set(BT_MINGW_BUNDLE_LIBGCC OFF CACHE BOOL "blurgtext static link libgcc" FORCE)
add_subdirectory(extern/regex boost_regex)
add_subdirectory(extern/blurgtext blurgtext)
add_subdirectory(src/cimgui_ext cimgui)
add_subdirectory(extern/lancerdecode lancerdecode)
add_subdirectory(src/crnlibglue crnlibglue)
add_subdirectory(extern/thorncompiler thorncompiler)
add_subdirectory(src/lancerdialogs lancerdialogs)

