//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class Basic_PositionTexture
    {
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(135)));
            if ((masked == ((ShaderFeatures)(1))))
            {
                return 1;
            }
            if ((masked == ((ShaderFeatures)(128))))
            {
                return 2;
            }
            if ((masked == ((ShaderFeatures)(129))))
            {
                return 3;
            }
            if ((masked == ((ShaderFeatures)(2))))
            {
                return 4;
            }
            if ((masked == ((ShaderFeatures)(3))))
            {
                return 5;
            }
            if ((masked == ((ShaderFeatures)(130))))
            {
                return 6;
            }
            if ((masked == ((ShaderFeatures)(131))))
            {
                return 7;
            }
            if ((masked == ((ShaderFeatures)(4))))
            {
                return 8;
            }
            if ((masked == ((ShaderFeatures)(5))))
            {
                return 9;
            }
            if ((masked == ((ShaderFeatures)(132))))
            {
                return 10;
            }
            if ((masked == ((ShaderFeatures)(133))))
            {
                return 11;
            }
            if ((masked == ((ShaderFeatures)(6))))
            {
                return 12;
            }
            if ((masked == ((ShaderFeatures)(7))))
            {
                return 13;
            }
            if ((masked == ((ShaderFeatures)(134))))
            {
                return 14;
            }
            if ((masked == ((ShaderFeatures)(135))))
            {
                return 15;
            }
            return 0;
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device, ShaderFeatures features)
        {
            AllShaders.Compile(device);
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device)
        {
            AllShaders.Compile(device);
            return variants[0];
        }
        internal static void Compile(LibreLancer.Graphics.RenderContext device, string sourceBundle)
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling Basic_PositionTexture");
            variants = new ShaderVariables[16];
            variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(18061, 4181));
            variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(22242, 4235));
            variants[2] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(30544, 2389));
            variants[3] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(32933, 2443));
            variants[4] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(35376, 4225));
            variants[5] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(39601, 4279));
            variants[6] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(43880, 2433));
            variants[7] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(46313, 2487));
            variants[8] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(48800, 4375));
            variants[9] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(53175, 4429));
            variants[10] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(57604, 2583));
            variants[11] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(60187, 2637));
            variants[12] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(62824, 4419));
            variants[13] = ShaderVariables.Compile(device, sourceBundle.Substring(165582, 1248), sourceBundle.Substring(67243, 4473));
            variants[14] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(71716, 2627));
            variants[15] = ShaderVariables.Compile(device, sourceBundle.Substring(166830, 4172), sourceBundle.Substring(74343, 2681));
        }
    }
}
