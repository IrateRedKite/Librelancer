//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibreLancer.Shaders
{
    using System;
    
    public class DetailMap2Dm1Msk2PassMaterial
    {
        static ShaderVariables[] variants;
        private static bool iscompiled = false;
        private static int GetIndex(ShaderFeatures features)
        {
            ShaderFeatures masked = (features & ((ShaderFeatures)(128)));
            if ((masked == ((ShaderFeatures)(128))))
            {
                return 1;
            }
            return 0;
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device, ShaderFeatures features)
        {
            AllShaders.Compile(device);
            return variants[GetIndex(features)];
        }
        public static ShaderVariables Get(LibreLancer.Graphics.RenderContext device)
        {
            AllShaders.Compile(device);
            return variants[0];
        }
        internal static void Compile(LibreLancer.Graphics.RenderContext device, string sourceBundle)
        {
            if (iscompiled)
            {
                return;
            }
            iscompiled = true;
            ShaderVariables.Log("Compiling DetailMap2Dm1Msk2PassMaterial");
            variants = new ShaderVariables[2];
            variants[0] = ShaderVariables.Compile(device, sourceBundle.Substring(181305, 1247), sourceBundle.Substring(182552, 4366));
            variants[1] = ShaderVariables.Compile(device, sourceBundle.Substring(186918, 4171), sourceBundle.Substring(191089, 2574));
        }
    }
}
