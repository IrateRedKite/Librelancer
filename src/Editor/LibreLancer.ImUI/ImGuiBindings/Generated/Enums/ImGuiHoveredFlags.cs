// <auto-generated/>
// ReSharper disable InconsistentNaming
using System;

namespace ImGuiNET;

/// <summary>
/// <para>Flags for ImGui::IsItemHovered(), ImGui::IsWindowHovered()</para>
/// <para>Note: if you are trying to check whether your mouse should be dispatched to Dear ImGui or to your app, you should use 'io.WantCaptureMouse' instead! Please read the FAQ!</para>
/// Note: windows with the ImGuiWindowFlags_NoInputs flag are ignored by IsWindowHovered() calls.
/// </summary>
[Flags]
public enum ImGuiHoveredFlags
{
    /// <summary>
    /// Return true if directly over the item/window, not obstructed by another window, not obstructed by an active popup or modal blocking inputs under them.
    /// </summary>
    None = 0,
    /// <summary>
    /// IsWindowHovered() only: Return true if any children of the window is hovered
    /// </summary>
    ChildWindows = 1<<0,
    /// <summary>
    /// IsWindowHovered() only: Test from root window (top most parent of the current hierarchy)
    /// </summary>
    RootWindow = 1<<1,
    /// <summary>
    /// IsWindowHovered() only: Return true if any window is hovered
    /// </summary>
    AnyWindow = 1<<2,
    /// <summary>
    /// IsWindowHovered() only: Do not consider popup hierarchy (do not treat popup emitter as parent of popup) (when used with _ChildWindows or _RootWindow)
    /// </summary>
    NoPopupHierarchy = 1<<3,
    /// <summary>
    /// <para>ImGuiHoveredFlags_DockHierarchy               = 1 &lt;&lt; 4,   // IsWindowHovered() only: Consider docking hierarchy (treat dockspace host as parent of docked window) (when used with _ChildWindows or _RootWindow)</para>
    /// Return true even if a popup window is normally blocking access to this item/window
    /// </summary>
    AllowWhenBlockedByPopup = 1<<5,
    /// <summary>
    /// <para>ImGuiHoveredFlags_AllowWhenBlockedByModal     = 1 &lt;&lt; 6,   // Return true even if a modal popup window is normally blocking access to this item/window. FIXME-TODO: Unavailable yet.</para>
    /// Return true even if an active item is blocking access to this item/window. Useful for Drag and Drop patterns.
    /// </summary>
    AllowWhenBlockedByActiveItem = 1<<7,
    /// <summary>
    /// IsItemHovered() only: Return true even if the item uses AllowOverlap mode and is overlapped by another hoverable item.
    /// </summary>
    AllowWhenOverlappedByItem = 1<<8,
    /// <summary>
    /// IsItemHovered() only: Return true even if the position is obstructed or overlapped by another window.
    /// </summary>
    AllowWhenOverlappedByWindow = 1<<9,
    /// <summary>
    /// IsItemHovered() only: Return true even if the item is disabled
    /// </summary>
    AllowWhenDisabled = 1<<10,
    /// <summary>
    /// IsItemHovered() only: Disable using keyboard/gamepad navigation state when active, always query mouse
    /// </summary>
    NoNavOverride = 1<<11,
    AllowWhenOverlapped = AllowWhenOverlappedByItem | AllowWhenOverlappedByWindow,
    RectOnly = AllowWhenBlockedByPopup | AllowWhenBlockedByActiveItem | AllowWhenOverlapped,
    RootAndChildWindows = RootWindow | ChildWindows,
    /// <summary>
    /// <para>Tooltips mode</para>
    /// <para>- typically used in IsItemHovered() + SetTooltip() sequence.</para>
    /// <para>- this is a shortcut to pull flags from 'style.HoverFlagsForTooltipMouse' or 'style.HoverFlagsForTooltipNav' where you can reconfigure desired behavior.</para>
    /// <para>e.g. 'TooltipHoveredFlagsForMouse' defaults to 'ImGuiHoveredFlags_Stationary | ImGuiHoveredFlags_DelayShort'.</para>
    /// <para>- for frequently actioned or hovered items providing a tooltip, you want may to use ImGuiHoveredFlags_ForTooltip (stationary + delay) so the tooltip doesn't show too often.</para>
    /// <para>- for items which main purpose is to be hovered, or items with low affordance, or in less consistent apps, prefer no delay or shorter delay.</para>
    /// Shortcut for standard flags when using IsItemHovered() + SetTooltip() sequence.
    /// </summary>
    ForTooltip = 1<<12,
    /// <summary>
    /// <para>(Advanced) Mouse Hovering delays.</para>
    /// <para>- generally you can use ImGuiHoveredFlags_ForTooltip to use application-standardized flags.</para>
    /// <para>- use those if you need specific overrides.</para>
    /// Require mouse to be stationary for style.HoverStationaryDelay (~0.15 sec) _at least one time_. After this, can move on same item/window. Using the stationary test tends to reduces the need for a long delay.
    /// </summary>
    Stationary = 1<<13,
    /// <summary>
    /// IsItemHovered() only: Return true immediately (default). As this is the default you generally ignore this.
    /// </summary>
    DelayNone = 1<<14,
    /// <summary>
    /// IsItemHovered() only: Return true after style.HoverDelayShort elapsed (~0.15 sec) (shared between items) + requires mouse to be stationary for style.HoverStationaryDelay (once per item).
    /// </summary>
    DelayShort = 1<<15,
    /// <summary>
    /// IsItemHovered() only: Return true after style.HoverDelayNormal elapsed (~0.40 sec) (shared between items) + requires mouse to be stationary for style.HoverStationaryDelay (once per item).
    /// </summary>
    DelayNormal = 1<<16,
    /// <summary>
    /// IsItemHovered() only: Disable shared delay system where moving from one item to the next keeps the previous timer for a short time (standard for tooltips with long delays)
    /// </summary>
    NoSharedDelay = 1<<17
}
