// <auto-generated/>
// ReSharper disable InconsistentNaming
using System;

namespace ImGuiNET;

/// <summary>
/// Flags for BeginMultiSelect()
/// </summary>
[Flags]
public enum ImGuiMultiSelectFlags
{
    None = 0,
    /// <summary>
    /// Disable selecting more than one item. This is available to allow single-selection code to share same code/logic if desired. It essentially disables the main purpose of BeginMultiSelect() tho!
    /// </summary>
    SingleSelect = 1<<0,
    /// <summary>
    /// Disable CTRL+A shortcut to select all.
    /// </summary>
    NoSelectAll = 1<<1,
    /// <summary>
    /// Disable Shift+selection mouse/keyboard support (useful for unordered 2D selection). With BoxSelect is also ensure contiguous SetRange requests are not combined into one. This allows not handling interpolation in SetRange requests.
    /// </summary>
    NoRangeSelect = 1<<2,
    /// <summary>
    /// Disable selecting items when navigating (useful for e.g. supporting range-select in a list of checkboxes).
    /// </summary>
    NoAutoSelect = 1<<3,
    /// <summary>
    /// Disable clearing selection when navigating or selecting another one (generally used with ImGuiMultiSelectFlags_NoAutoSelect. useful for e.g. supporting range-select in a list of checkboxes).
    /// </summary>
    NoAutoClear = 1<<4,
    /// <summary>
    /// Disable clearing selection when clicking/selecting an already selected item.
    /// </summary>
    NoAutoClearOnReselect = 1<<5,
    /// <summary>
    /// Enable box-selection with same width and same x pos items (e.g. full row Selectable()). Box-selection works better with little bit of spacing between items hit-box in order to be able to aim at empty space.
    /// </summary>
    BoxSelect1d = 1<<6,
    /// <summary>
    /// Enable box-selection with varying width or varying x pos items support (e.g. different width labels, or 2D layout/grid). This is slower: alters clipping logic so that e.g. horizontal movements will update selection of normally clipped items.
    /// </summary>
    BoxSelect2d = 1<<7,
    /// <summary>
    /// Disable scrolling when box-selecting near edges of scope.
    /// </summary>
    BoxSelectNoScroll = 1<<8,
    /// <summary>
    /// Clear selection when pressing Escape while scope is focused.
    /// </summary>
    ClearOnEscape = 1<<9,
    /// <summary>
    /// Clear selection when clicking on empty location within scope.
    /// </summary>
    ClearOnClickVoid = 1<<10,
    /// <summary>
    /// Scope for _BoxSelect and _ClearOnClickVoid is whole window (Default). Use if BeginMultiSelect() covers a whole window or used a single time in same window.
    /// </summary>
    ScopeWindow = 1<<11,
    /// <summary>
    /// Scope for _BoxSelect and _ClearOnClickVoid is rectangle encompassing BeginMultiSelect()/EndMultiSelect(). Use if BeginMultiSelect() is called multiple times in same window.
    /// </summary>
    ScopeRect = 1<<12,
    /// <summary>
    /// Apply selection on mouse down when clicking on unselected item. (Default)
    /// </summary>
    SelectOnClick = 1<<13,
    /// <summary>
    /// Apply selection on mouse release when clicking an unselected item. Allow dragging an unselected item without altering selection.
    /// </summary>
    SelectOnClickRelease = 1<<14,
    /// <summary>
    /// <para>ImGuiMultiSelectFlags_RangeSelect2d       = 1 &lt;&lt; 15,  // Shift+Selection uses 2d geometry instead of linear sequence, so possible to use Shift+up/down to select vertically in grid. Analogous to what BoxSelect does.</para>
    /// [Temporary] Enable navigation wrapping on X axis. Provided as a convenience because we don't have a design for the general Nav API for this yet. When the more general feature be public we may obsolete this flag in favor of new one.
    /// </summary>
    NavWrapX = 1<<16
}
