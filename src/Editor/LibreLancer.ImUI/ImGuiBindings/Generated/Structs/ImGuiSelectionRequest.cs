// <auto-generated/>
// ReSharper disable InconsistentNaming
#pragma warning disable CS9084 // Struct member returns 'this' or other instance members by reference
using System;
using System.Runtime.InteropServices;
namespace ImGuiNET;

/// <summary>
/// Selection request item
/// </summary>
public unsafe partial struct ImGuiSelectionRequest
{
    /// <summary>
    /// <para>------------------------------------------// BeginMultiSelect / EndMultiSelect</para>
    /// ms:w, app:r     /  ms:w, app:r   // Request type. You'll most often receive 1 Clear + 1 SetRange with a single-item range.
    /// </summary>
    public ImGuiSelectionRequestType Type;
    private byte __Selected;
    /// <summary>
    /// ms:w, app:r     /  ms:w, app:r   // Parameter for SetAll/SetRange requests (true = select, false = unselect)
    /// </summary>
    public bool Selected
    {
        get => __Selected != 0;
        set => __Selected = value ? (byte)1 : (byte)0;
    }
    /// <summary>
    /// /  ms:w  app:r   // Parameter for SetRange request: +1 when RangeFirstItem comes before RangeLastItem, -1 otherwise. Useful if you want to preserve selection order on a backward Shift+Click.
    /// </summary>
    public sbyte RangeDirection;
    /// <summary>
    /// /  ms:w, app:r   // Parameter for SetRange request (this is generally == RangeSrcItem when shift selecting from top to bottom).
    /// </summary>
    public long RangeFirstItem;
    /// <summary>
    /// /  ms:w, app:r   // Parameter for SetRange request (this is generally == RangeSrcItem when shift selecting from bottom to top). Inclusive!
    /// </summary>
    public long RangeLastItem;
}
