// <auto-generated/>
// ReSharper disable InconsistentNaming
#pragma warning disable CS9084 // Struct member returns 'this' or other instance members by reference
using System;
using System.Runtime.InteropServices;
namespace ImGuiNET;

/// <summary>
/// <para>Helper: Key-&gt;Value storage</para>
/// <para>Typically you don't have to worry about this since a storage is held within each Window.</para>
/// <para>We use it to e.g. store collapse state for a tree (Int 0/1)</para>
/// <para>This is optimized for efficient lookup (dichotomy into a contiguous buffer) and rare insertion (typically tied to user interactions aka max once a frame)</para>
/// <para>You can use it as custom user storage for temporary values. Declare your own storage if, for example:</para>
/// <para>- You want to manipulate the open/close state of a particular sub-tree in your interface (tree node uses Int 0/1 to store their state).</para>
/// <para>- You want to store custom debug data easily without adding or editing structures in your code (probably not efficient, but convenient)</para>
/// Types are NOT stored, so it is up to you to make sure your Key don't collide with different types.
/// </summary>
public unsafe partial struct ImGuiStorage
{
    /// <summary>
    /// [Internal]
    /// </summary>
    public ImVector<ImGuiStoragePair> Data;
}
