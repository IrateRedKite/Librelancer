// <auto-generated/>
// ReSharper disable InconsistentNaming
#pragma warning disable CS9084 // Struct member returns 'this' or other instance members by reference
using System;
using System.Runtime.InteropServices;
namespace ImGuiNET;

/// <summary>
/// <para>Sorting specifications for a table (often handling sort specs for a single column, occasionally more)</para>
/// <para>Obtained by calling TableGetSortSpecs().</para>
/// <para>When 'SpecsDirty == true' you can sort your data. It will be true with sorting specs have changed since last call, or the first time.</para>
/// Make sure to set 'SpecsDirty = false' after sorting, else you may wastefully sort your data every frame!
/// </summary>
public unsafe partial struct ImGuiTableSortSpecs
{
    private ImGuiTableColumnSortSpecs* __Specs;
    /// <summary>
    /// Pointer to sort spec array.
    /// </summary>
    public ImGuiTableColumnSortSpecsPtr Specs
    {
        get => ImGuiTableColumnSortSpecsPtr.Create(__Specs);
        set => __Specs = ImGuiTableColumnSortSpecsPtr.GetHandle(value);
    }
    /// <summary>
    /// Sort spec count. Most often 1. May be &gt; 1 when ImGuiTableFlags_SortMulti is enabled. May be == 0 when ImGuiTableFlags_SortTristate is enabled.
    /// </summary>
    public int SpecsCount;
    private byte __SpecsDirty;
    /// <summary>
    /// Set to true when specs have changed since last time! Use this to sort again, then clear the flag.
    /// </summary>
    public bool SpecsDirty
    {
        get => __SpecsDirty != 0;
        set => __SpecsDirty = value ? (byte)1 : (byte)0;
    }
}
