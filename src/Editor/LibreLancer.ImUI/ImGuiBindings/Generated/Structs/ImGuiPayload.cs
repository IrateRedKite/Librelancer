// <auto-generated/>
// ReSharper disable InconsistentNaming
#pragma warning disable CS9084 // Struct member returns 'this' or other instance members by reference
using System;
using System.Runtime.InteropServices;
namespace ImGuiNET;

/// <summary>
/// Data payload for Drag and Drop operations: AcceptDragDropPayload(), GetDragDropPayload()
/// </summary>
public unsafe partial struct ImGuiPayload
{
    /// <summary>
    /// <para>Members</para>
    /// Data (copied and owned by dear imgui)
    /// </summary>
    public IntPtr Data;
    /// <summary>
    /// Data size
    /// </summary>
    public int DataSize;
    /// <summary>
    /// <para>[Internal]</para>
    /// Source item id
    /// </summary>
    public uint SourceId;
    /// <summary>
    /// Source parent id (if available)
    /// </summary>
    public uint SourceParentId;
    /// <summary>
    /// Data timestamp
    /// </summary>
    public int DataFrameCount;
    [System.Runtime.CompilerServices.InlineArray(32+1)]
    private struct __inline_DataType
    {
        public sbyte _0;
    }
    private __inline_DataType __array_DataType;
    /// <summary>
    /// Data type tag (short user-supplied string, 32 characters max)
    /// </summary>
    public Span<sbyte> DataType => __array_DataType;

    private byte __Preview;
    /// <summary>
    /// Set when AcceptDragDropPayload() was called and mouse has been hovering the target item (nb: handle overlapping drag targets)
    /// </summary>
    public bool Preview
    {
        get => __Preview != 0;
        set => __Preview = value ? (byte)1 : (byte)0;
    }
    private byte __Delivery;
    /// <summary>
    /// Set when AcceptDragDropPayload() was called and mouse button is released over the target item.
    /// </summary>
    public bool Delivery
    {
        get => __Delivery != 0;
        set => __Delivery = value ? (byte)1 : (byte)0;
    }
}
