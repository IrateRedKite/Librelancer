// <auto-generated/>
// ReSharper disable InconsistentNaming
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace ImGuiNET;

public unsafe partial class ImGuiSizeCallbackDataPtr
{
    public ImGuiSizeCallbackData* Handle { get; private set; }

    public ImGuiSizeCallbackDataPtr (ImGuiSizeCallbackData* handle)
    {
        Handle = handle;
    }

    internal static ImGuiSizeCallbackDataPtr Create(ImGuiSizeCallbackData* handle)
    {
        return handle == null ? null : new(handle);
    }

    internal static ImGuiSizeCallbackData* GetHandle(ImGuiSizeCallbackDataPtr self)
    {
        return self == null ? null : self.Handle;
    }

    /// <summary>
    /// Read-only.   What user passed to SetNextWindowSizeConstraints(). Generally store an integer or float in here (need reinterpret_cast&lt;&gt;).
    /// </summary>
    public IntPtr UserData
    {
        get => Handle->UserData;
        set => Handle->UserData = value;
    }

    /// <summary>
    /// Read-only.   Window position, for reference.
    /// </summary>
    public ref System.Numerics.Vector2 Pos => ref Unsafe.AsRef<System.Numerics.Vector2>(&Handle->Pos);

    /// <summary>
    /// Read-only.   Current window size.
    /// </summary>
    public ref System.Numerics.Vector2 CurrentSize => ref Unsafe.AsRef<System.Numerics.Vector2>(&Handle->CurrentSize);

    /// <summary>
    /// Read-write.  Desired size, based on user's mouse position. Write to this field to restrain resizing.
    /// </summary>
    public ref System.Numerics.Vector2 DesiredSize => ref Unsafe.AsRef<System.Numerics.Vector2>(&Handle->DesiredSize);

}
