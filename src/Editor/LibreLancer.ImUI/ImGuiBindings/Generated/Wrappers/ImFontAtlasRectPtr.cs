// <auto-generated/>
// ReSharper disable InconsistentNaming
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace ImGuiNET;

public unsafe partial class ImFontAtlasRectPtr
{
    public ImFontAtlasRect* Handle { get; private set; }

    public ImFontAtlasRectPtr (ImFontAtlasRect* handle)
    {
        Handle = handle;
    }

    internal static ImFontAtlasRectPtr Create(ImFontAtlasRect* handle)
    {
        return handle == null ? null : new(handle);
    }

    internal static ImFontAtlasRect* GetHandle(ImFontAtlasRectPtr self)
    {
        return self == null ? null : self.Handle;
    }

    /// <summary>
    /// Position (in current texture)
    /// </summary>
    public ref ushort x => ref Unsafe.AsRef<ushort>(&Handle->x);

    /// <summary>
    /// Position (in current texture)
    /// </summary>
    public ref ushort y => ref Unsafe.AsRef<ushort>(&Handle->y);

    /// <summary>
    /// Size
    /// </summary>
    public ref ushort w => ref Unsafe.AsRef<ushort>(&Handle->w);

    /// <summary>
    /// Size
    /// </summary>
    public ref ushort h => ref Unsafe.AsRef<ushort>(&Handle->h);

    /// <summary>
    /// UV coordinates (in current texture)
    /// </summary>
    public ref System.Numerics.Vector2 uv0 => ref Unsafe.AsRef<System.Numerics.Vector2>(&Handle->uv0);

    /// <summary>
    /// UV coordinates (in current texture)
    /// </summary>
    public ref System.Numerics.Vector2 uv1 => ref Unsafe.AsRef<System.Numerics.Vector2>(&Handle->uv1);

}
