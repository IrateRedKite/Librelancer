// <auto-generated/>
// ReSharper disable InconsistentNaming
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace ImGuiNET;

public unsafe partial class ImGuiPlatformImeDataPtr
{
    public ImGuiPlatformImeData* Handle { get; private set; }

    public ImGuiPlatformImeDataPtr (ImGuiPlatformImeData* handle)
    {
        Handle = handle;
    }

    internal static ImGuiPlatformImeDataPtr Create(ImGuiPlatformImeData* handle)
    {
        return handle == null ? null : new(handle);
    }

    internal static ImGuiPlatformImeData* GetHandle(ImGuiPlatformImeDataPtr self)
    {
        return self == null ? null : self.Handle;
    }

    /// <summary>
    /// A widget wants the IME to be visible.
    /// </summary>
    public bool WantVisible
    {
        get => Handle->WantVisible;
        set => Handle->WantVisible = value;
    }

    /// <summary>
    /// A widget wants text input, not necessarily IME to be visible. This is automatically set to the upcoming value of io.WantTextInput.
    /// </summary>
    public bool WantTextInput
    {
        get => Handle->WantTextInput;
        set => Handle->WantTextInput = value;
    }

    /// <summary>
    /// Position of input cursor (for IME).
    /// </summary>
    public ref System.Numerics.Vector2 InputPos => ref Unsafe.AsRef<System.Numerics.Vector2>(&Handle->InputPos);

    /// <summary>
    /// Line height (for IME).
    /// </summary>
    public ref float InputLineHeight => ref Unsafe.AsRef<float>(&Handle->InputLineHeight);

    /// <summary>
    /// ID of platform window/viewport.
    /// </summary>
    public ref uint ViewportId => ref Unsafe.AsRef<uint>(&Handle->ViewportId);

}
