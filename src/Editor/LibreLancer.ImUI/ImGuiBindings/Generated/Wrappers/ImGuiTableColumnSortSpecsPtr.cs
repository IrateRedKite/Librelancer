// <auto-generated/>
// ReSharper disable InconsistentNaming
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace ImGuiNET;

public unsafe partial class ImGuiTableColumnSortSpecsPtr
{
    public ImGuiTableColumnSortSpecs* Handle { get; private set; }

    public ImGuiTableColumnSortSpecsPtr (ImGuiTableColumnSortSpecs* handle)
    {
        Handle = handle;
    }

    internal static ImGuiTableColumnSortSpecsPtr Create(ImGuiTableColumnSortSpecs* handle)
    {
        return handle == null ? null : new(handle);
    }

    internal static ImGuiTableColumnSortSpecs* GetHandle(ImGuiTableColumnSortSpecsPtr self)
    {
        return self == null ? null : self.Handle;
    }

    /// <summary>
    /// User id of the column (if specified by a TableSetupColumn() call)
    /// </summary>
    public ref uint ColumnUserID => ref Unsafe.AsRef<uint>(&Handle->ColumnUserID);

    /// <summary>
    /// Index of the column
    /// </summary>
    public ref short ColumnIndex => ref Unsafe.AsRef<short>(&Handle->ColumnIndex);

    /// <summary>
    /// Index within parent ImGuiTableSortSpecs (always stored in order starting from 0, tables sorted on a single criteria will always have a 0 here)
    /// </summary>
    public ref short SortOrder => ref Unsafe.AsRef<short>(&Handle->SortOrder);

    /// <summary>
    /// ImGuiSortDirection_Ascending or ImGuiSortDirection_Descending
    /// </summary>
    public ref ImGuiSortDirection SortDirection => ref Unsafe.AsRef<ImGuiSortDirection>(&Handle->SortDirection);

}
