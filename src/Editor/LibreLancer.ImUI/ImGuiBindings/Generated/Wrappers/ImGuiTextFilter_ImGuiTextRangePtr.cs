// <auto-generated/>
// ReSharper disable InconsistentNaming
using System;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

namespace ImGuiNET;

public unsafe partial class ImGuiTextFilter_ImGuiTextRangePtr
{
    public ImGuiTextFilter_ImGuiTextRange* Handle { get; private set; }

    public ImGuiTextFilter_ImGuiTextRangePtr (ImGuiTextFilter_ImGuiTextRange* handle)
    {
        Handle = handle;
    }

    internal static ImGuiTextFilter_ImGuiTextRangePtr Create(ImGuiTextFilter_ImGuiTextRange* handle)
    {
        return handle == null ? null : new(handle);
    }

    internal static ImGuiTextFilter_ImGuiTextRange* GetHandle(ImGuiTextFilter_ImGuiTextRangePtr self)
    {
        return self == null ? null : self.Handle;
    }

    public byte* b
    {
        get => Handle->b;
        set => Handle->b = value;
    }

    public byte* e
    {
        get => Handle->e;
        set => Handle->e = value;
    }

    public bool empty()
    {
        return ImGuiNative.ImGuiTextFilter_ImGuiTextRange_empty(this.Handle) != 0;
    }
    public void split(sbyte separator, ref ImVector<ImGuiTextFilter_ImGuiTextRange> output)
    {
        fixed(ImVector<ImGuiTextFilter_ImGuiTextRange>* __output_p = &output)
        {
            ImGuiNative.ImGuiTextFilter_ImGuiTextRange_split(this.Handle, separator, __output_p);
        }
    }
}
