// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;


namespace LLShaderCompiler.SPIRVCross;

public record struct spvc_context(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_context Null => new spvc_context(0);
	public static implicit operator spvc_context(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_context handle) => handle.Handle;
}

public record struct spvc_parsed_ir(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_parsed_ir Null => new spvc_parsed_ir(0);
	public static implicit operator spvc_parsed_ir(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_parsed_ir handle) => handle.Handle;
}

public record struct spvc_compiler(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_compiler Null => new spvc_compiler(0);
	public static implicit operator spvc_compiler(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_compiler handle) => handle.Handle;
}

public record struct spvc_compiler_options(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_compiler_options Null => new spvc_compiler_options(0);
	public static implicit operator spvc_compiler_options(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_compiler_options handle) => handle.Handle;
}

public record struct spvc_resources(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_resources Null => new spvc_resources(0);
	public static implicit operator spvc_resources(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_resources handle) => handle.Handle;
}

public record struct spvc_type(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_type Null => new spvc_type(0);
	public static implicit operator spvc_type(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_type handle) => handle.Handle;
}

public record struct spvc_constant(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_constant Null => new spvc_constant(0);
	public static implicit operator spvc_constant(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_constant handle) => handle.Handle;
}

public record struct spvc_set(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_set Null => new spvc_set(0);
	public static implicit operator spvc_set(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_set handle) => handle.Handle;
}

public record struct spvc_error_callback(IntPtr Handle)
{
	public bool IsNull => Handle == 0;
	public static spvc_error_callback Null => new spvc_error_callback(0);
	public static implicit operator spvc_error_callback(IntPtr handle) => new (handle);
	public static implicit operator IntPtr(spvc_error_callback handle) => handle.Handle;
}

